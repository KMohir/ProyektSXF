from aiogram import types
from typing import List


def get_contact_keyboard() -> types.ReplyKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–æ–Ω—Ç–∞–∫—Ç–∞."""
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    keyboard.add(types.KeyboardButton(text="üì± –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç", request_contact=True))
    return keyboard


def get_main_menu_keyboard() -> types.ReplyKeyboardMarkup:
    """–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –¥–ª—è –æ–±—ã—á–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.row(
        types.KeyboardButton(text="üìã –í—ã–±—Ä–∞—Ç—å –ø—Ä–æ–µ–∫—Ç"),
        types.KeyboardButton(text="üìù –ú–æ–∏ –∑–∞–¥–∞—á–∏"),
    )
    keyboard.add(types.KeyboardButton(text="‚úçÔ∏è –í–≤–µ—Å—Ç–∏ –¥–∞–Ω–Ω—ã–µ"))
    return keyboard


def get_admin_menu_keyboard() -> types.ReplyKeyboardMarkup:
    """–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ (–¥–æ–ø. –∫–Ω–æ–ø–∫–∏)."""
    keyboard = get_main_menu_keyboard()
    keyboard.row(
        types.KeyboardButton(text="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"),
        types.KeyboardButton(text="üìë –í—Å–µ –∑–∞–¥–∞—á–∏"),
    )
    return keyboard


def get_projects_keyboard(projects: List[str]) -> types.InlineKeyboardMarkup:
    """–ò–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å–æ —Å–ø–∏—Å–∫–æ–º –ø—Ä–æ–µ–∫—Ç–æ–≤."""
    markup = types.InlineKeyboardMarkup()
    for name in projects:
        markup.add(
            types.InlineKeyboardButton(text=name, callback_data=f"project_{name}")
        )
    return markup


def get_tasks_keyboard(tasks: List[str], project_name: str) -> types.InlineKeyboardMarkup:
    """–ò–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å–æ —Å–ø–∏—Å–∫–æ–º –∑–∞–¥–∞—á –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞."""
    markup = types.InlineKeyboardMarkup()
    for idx, task in enumerate(tasks):
        # –û–≥—Ä–∞–Ω–∏—á–∏–º –¥–ª–∏–Ω—É –Ω–∞–∑–≤–∞–Ω–∏—è –∫–Ω–æ–ø–∫–∏, —á—Ç–æ–±—ã –Ω–µ —Ä–∞–∑—ä–µ–∑–∂–∞–ª–∞—Å—å —Ä–∞–∑–º–µ—Ç–∫–∞
        title = task if len(task) <= 64 else task[:61] + "..."
        markup.add(
            types.InlineKeyboardButton(
                text=title,
                callback_data=f"task_{project_name}_{idx}",
            )
        )
    # –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥ –∫ –ø—Ä–æ–µ–∫—Ç–∞–º"
    markup.add(
        types.InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_projects")
    )
    return markup


def get_admin_keyboard(user_id: int, project_name: str, task_index: int) -> types.InlineKeyboardMarkup:
    """–ò–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –∞–¥–º–∏–Ω–∞: –û–¥–æ–±—Ä–∏—Ç—å / –û—Ç–∫–ª–æ–Ω–∏—Ç—å."""
    markup = types.InlineKeyboardMarkup()
    approve_cb = f"approve_{user_id}_{project_name}_{task_index}"
    reject_cb = f"reject_{user_id}_{project_name}_{task_index}"
    markup.row(
        types.InlineKeyboardButton(text="‚úÖ –û–¥–æ–±—Ä–∏—Ç—å", callback_data=approve_cb),
        types.InlineKeyboardButton(text="‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å", callback_data=reject_cb),
    )
    return markup


def get_task_status_keyboard() -> types.InlineKeyboardMarkup:
    """–ó–∞–≥–æ—Ç–æ–≤–∫–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–¥–∞—á–∏ (–Ω–∞ –±—É–¥—É—â–µ–µ)."""
    # –í —Ç–µ–∫—É—â–µ–π –ª–æ–≥–∏–∫–µ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è, –Ω–æ –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç—Å—è –≤ bot.py.
    return types.InlineKeyboardMarkup()


def get_add_note_keyboard(project_name: str, task_index: int) -> types.InlineKeyboardMarkup:
    """–ò–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º (–∑–∞–ø–∏—Å—å –≤ —Å—Ç–æ–ª–±–µ—Ü K)."""
    markup = types.InlineKeyboardMarkup()
    markup.add(
        types.InlineKeyboardButton(
            text="‚úçÔ∏è –î–æ–±–∞–≤–∏—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π",
            callback_data=f"addnote_{project_name}_{task_index}",
        )
    )
    return markup


